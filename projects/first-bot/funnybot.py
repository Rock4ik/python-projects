import asyncio
import random
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

BOT_TOKEN = "–¢–≤–æ–π —Ç–æ–∫–µ–Ω –∑–¥–µ—Å—å"


bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()


main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ü–æ–∫–∞–∂–∏ –∫–æ—Ç–∏–∫–∞"), KeyboardButton(text="–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ")],
        [KeyboardButton(text="–ú–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"), KeyboardButton(text="–®–∞—Ä —Å—É–¥—å–±—ã")],
    ],
    resize_keyboard=True
)


@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    welcome_text = (
        "–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –±–æ—Ç! \n"
        "–í—ã–±–µ—Ä–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É:\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å\n"
        "/fun - –°–ª—É—á–∞–π–Ω–∞—è —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞"
    )
    await message.answer(welcome_text, reply_markup=main_menu)


@dp.message(Command("help"))
async def cmd_help(message: types.Message):
    help_text = (
        "üéÆ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ù–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n"
        "/fun - –°–ª—É—á–∞–π–Ω–∞—è —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞\n\n"
        "–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é:\n"
        "–ü–æ–∫–∞–∂–∏ –∫–æ—Ç–∏–∫–∞ - –ú–∏–ª—ã–µ –∫–æ—Ç–∏–∫–∏!\n"
        "–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ - –û—Ç 1 –¥–æ 100\n"
        "–ú–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ - –£–≥–∞–¥–∞—é —Ç–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ\n"
        "–®–∞—Ä —Å—É–¥—å–±—ã - –û—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å"
    )
    await message.answer(help_text)


@dp.message(Command("fun"))
async def cmd_fun(message: types.Message):
    fun_actions = [
        "üé≤ –ë—Ä–æ—Å–∏–ª –∫—É–±–∏–∫: –≤—ã–ø–∞–ª–æ " + str(random.randint(1, 6)),
        "üê± –õ–æ–≤–∏ –∫–æ—Ç–∏–∫–∞! https://cataas.com/cat",
        "–®–∞—Ä —Å—É–¥—å–±—ã –≥–æ–≤–æ—Ä–∏—Ç: " + random.choice(["–î–∞", "–ù–µ—Ç", "–í–æ–∑–º–æ–∂–Ω–æ", "–°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ"]),
        "–¢–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: " + random.choice(["–û—Ç–ª–∏—á–Ω–æ! üòé", "–ù–æ—Ä–º–∞–ª—å–Ω–æ üôÇ", "–ú–æ–≥–ª–æ –±—ã—Ç—å –ª—É—á—à–µ üòê"]),
        "üéâ –°–µ–≥–æ–¥–Ω—è –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–∏–π –¥–µ–Ω—å!"
    ]
    await message.answer(random.choice(fun_actions))


@dp.message(lambda message: message.text == "üê± –ü–æ–∫–∞–∂–∏ –∫–æ—Ç–∏–∫–∞")
async def show_cat(message: types.Message):
    cat_url = f"https://cataas.com/cat?t={random.random()}"
    await message.answer_photo(photo=cat_url, caption="–î–µ—Ä–∂–∏ –∫–æ—Ç–∏–∫–∞! üò∫")


@dp.message(lambda message: message.text == "üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ")
async def random_number(message: types.Message):
    number = random.randint(1, 100)
    await message.answer(f"üé≤ –¢–≤–æ–µ —á–∏—Å–ª–æ: {number}!")


@dp.message(lambda message: message.text == "üìä –ú–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ")
async def guess_mood(message: types.Message):
    moods = [
        "–ß—É–≤—Å—Ç–≤—É—é –ø–æ–∑–∏—Ç–∏–≤! üòä",
        "–ò–¥–µ–∞–ª—å–Ω–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –¥–ª—è –Ω–æ–≤—ã—Ö —Å–≤–µ—Ä—à–µ–Ω–∏–π! üí™"
    ]
    await message.answer(random.choice(moods))


@dp.message(lambda message: message.text == "üéØ –®–∞—Ä —Å—É–¥—å–±—ã")
async def magic_ball(message: types.Message):
    answers = [
        "–ù–∏–∫–∞–∫–∏—Ö —Å–æ–º–Ω–µ–Ω–∏–π!",
        "–û–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ –¥–∞!",
        "–°–ø—Ä–æ—Å–∏ –ø–æ–∑–∂–µ...",
        "–î–∞–∂–µ –Ω–µ –¥—É–º–∞–π!",
        "–ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã –Ω–µ –æ—á–µ–Ω—å..."
    ]
    await message.answer("üéØ " + random.choice(answers))


@dp.message()
async def echo(message: types.Message):
    if message.text not in ["üê± –ü–æ–∫–∞–∂–∏ –∫–æ—Ç–∏–∫–∞", "üé≤ –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ", "–ú–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", "–®–∞—Ä —Å—É–¥—å–±—ã", "–ü–æ–º–æ—â—å"]:
        await message.answer("–ò—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é –∏–ª–∏ –∫–æ–º–∞–Ω–¥—ã!", reply_markup=main_menu)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    print("üéÆ –†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –±–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())